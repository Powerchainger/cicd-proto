name: main

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment'
        required: false
        type: choice
        options:
          - another
          - test1
  
env:
  RELEASE_BRANCH: 'refs/heads/main'
  PUSH_AS_LATEST: true
  
jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      should_deploy: ${{ steps.should_deploy.outputs.output }}
      environments: ${{ steps.environments.outputs.output }}
    steps:
      - name: Determine where it triggers deployment
        id: should_deploy
        run: echo "output=${{ github.event_name != 'pull_request' }}" >> $GITHUB_OUTPUT
      - name: Environments to be run against
        run: echo '[${{ inputs.environment && format('{0}', inputs.environment) || null }}]' > environments.json
      - name: Set  environment output
        id: environments
        run: echo "output=$(cat environments.json)" >> $GITHUB_OUTPUT
  test:
    needs: [init]
    runs-on: ubuntu-latest
    steps:
      - name: show env output
        run: echo ${{ needs.init.outputs.should_deploy }}
      - name: show env
        run: echo ${{ needs.init.outputs.environments }}
      - name: show test
        run: echo ${{ fromJson(needs.init.outputs.environments) }}
      - run: echo ${{ toJSON(fromJson(needs.init.outputs.environments) || fromJson('[\"default\"]')) }}
  dotnet_build_and_test:
    uses: Powerchainger/infrastructure-shared/.github/workflows/dotnet_build.yml@main
    with: 
      dotnet_version: 6.0.x
  docker_build_and_test:
    needs: [init]
    strategy:
      matrix:
        application: [cicd-test]
    uses: Powerchainger/infrastructure-shared/.github/workflows/docker_build.yml@main
    with:
      file: ./DevOps/dockerfile
      context: .
      push:  ${{ fromJson(needs.init.outputs.should_deploy) }}
      application: ${{ matrix.application }}
      push_as_latest: true
  show:
    name: "show"
    runs-on: ubuntu-latest
    needs: [init, docker_build_and_test, dotnet_build_and_test]
    steps:
      - run: |
          echo "tags: ${{ needs.docker_build_and_test.outputs.image_tags }}"
          echo "should deploy: ${{ needs.init.outputs.should_deploy }}"
          echo "environments: {{ needs.init.outputs.environments }}"
  deploy:
    needs: [init, docker_build_and_test, dotnet_build_and_test]
    if: ${{ fromJson(needs.init.outputs.should_deploy) }}
    uses: Powerchainger/infrastructure-shared/.github/workflows/helm_deploy.yml@main
    with:
      environments: needs.init.outputs.environments
      values: |
        replicaCount: 1
        image:
          pullPolicy: IfNotPresent
          image: "ghcr.io/powerchainger/cicd-test:${{ needs.docker_build_and_test.outputs.image_version }}"
          pullSecrets:
          - name: regcred
      namespace: ${{ vars.KUBE_NAMESPACE }} 
      release: my-release
      chart: ./DevOps/Helm/test-service
    secrets:
     KUBE_CONFIG: $${{ secrets.KUBE_CONFIG }}
