name: main

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment'
        required: true
        type: choice
        options:
          - another
          - test1
  
env:
  RELEASE_BRANCH: 'refs/heads/main'
  PUSH_AS_LATEST: true
  
jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      should_deploy: ${{steps.should_deploy.outputs.output}}
      #environment: ${{}}
    steps:
      - name: Determine where it trigger deployment
        id: should_deploy
        run: echo "output=${{ github.event_name != 'pull_request' }}" >> $GITHUB_OUTPUT
      - name: Environments to be run against
        run: >
          echo '[
          ${{ inputs.environment && "," + inputs.environment|| ""}}
          ]'
          >> environments.json
      - name: Show 
        run: cat environments.json

          
  dotnet_build_and_test:
    uses: Powerchainger/infrastructure-shared/.github/workflows/dotnet_build.yml@main
    with: 
      dotnet_version: 6.0.x
  docker_build_and_test:
    strategy:
      matrix:
        application: [cicd-test]
    uses: Powerchainger/infrastructure-shared/.github/workflows/docker_build.yml@main
    with:
      file: ./DevOps/dockerfile
      context: .
      push:  ${{ github.event_name != 'pull_request' }}
      application: ${{matrix.application}}
      push_as_latest: true
  show:
    name: "show image tags"
    runs-on: ubuntu-latest
    needs: [docker_build_and_test, dotnet_build_and_test]
    steps:
      - run: echo "${{ needs.docker_build_and_test.outputs.image_tags }}"
  deploy:
    if: false
    runs-on: 'ubuntu-latest'
    needs: [docker_build_and_test, dotnet_build_and_test]
    environment: ${{ github.event.inputs.environment }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Kubernetes context
      uses: azure/k8s-set-context@v1
      with:
        method: kubeconfig
        kubeconfig: ${{ secrets.KUBE_CONFIG }}

    - name: Install Helm
      uses: azure/setup-helm@v4.2.0

    - name: Deploy with Helm
      uses: Powerchainger/infrastructure-shared/.github/actions/helm/local-chart-deploy@main
      with:
        values: |
          replicaCount: 1
          environmentType: ${{ github.event.inputs.environment }}
          image:
            pullPolicy: IfNotPresent
            image: "ghcr.io/powerchainger/cicd-test:${{ needs.docker_build_and_test.outputs.image_version }}"
            pullSecrets:
            - name: regcred
        namespace: ${{ vars.KUBE_NAMESPACE }} 
        release: my-release
        chart: ./DevOps/Helm/test-service


    - name: Check release
      run: helm status --namespace ${{ vars.KUBE_NAMESPACE }} my-release 
