name: choice environments from var

on:
  workflow_dispatch:
    inputs:
      flag:
        required: true
        type: boolean

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      environments: ${{steps.environments.outputs.output}}
      empty: ${{steps.empty.outputs.output}}
    steps:
      - name: Environments to be run against
        run: |
          if "${{ toJson(inputs.flag) }}" ; then
            echo '${{ vars.eevs }}' > environments.json
          else
            echo '${{ vars.QA_ENVS }}' > environments.json
          fi
      - run: cat environments.json
      - name: Set environment empty 
        id: empty
        run: |
          ARRAY_LENGTH=$(cat environments.json | jq length)
          if [ "$ARRAY_LENGTH" -eq 0 ]; then
            echo "output=true" >> $GITHUB_OUTPUT
          else
            echo "output=false" >> $GITHUB_OUTPUT
          fi
      - name: protect against empty
        run: |
          if ${{steps.empty.outputs.output}}; then
            echo "['none']" > environments.json
          fi
      - name: Set  environment output
        id: environments
        run: echo "output=$(cat environments.json)" >> $GITHUB_OUTPUT
      - run: echo ${{steps.empty.outputs.output}}
  test:
    needs: [init]
    if: needs.init.empty != 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: ${{ fromJson(needs.init.outputs.environments) }}
    steps:
      - run: echo "${{matrix.env}}"
      - run: echo "${{needs.init.outputs.empty}}"
